     1                                  bits 32 
     2                                  global start        
     3                                  
     4                                  
     5                                  extern exit, fopen,fclose, fprintf               
     6                                  import exit msvcrt.dll   
     7                                  import fopen msvcrt.dll 
     8                                  import fclose msvcrt.dll
     9                                  import fprintf msvcrt.dll   
    10                                  
    11                                  
    12                                  ;Se dau un nume de fisier si un text (definite in segmentul de date). 
    13                                  ;Textul contine litere mici, litere mari, cifre si caractere speciale. 
    14                                  ;Sa se transforme toate literele mari din textul dat in litere mici. 
    15                                  ;Sa se creeze un fisier cu numele dat si sa se scrie textul obtinut in fisier.
    16                                  segment data use32 class=data
    17                                     
    18 00000000 707261637469636534-        nume_fisier db 'practice4.txt', 0 
    18 00000009 2E74787400         
    19 0000000E 7700                       mod_acces db 'w', 0
    20 00000010 FFFFFFFF                   descriptor dd -1 
    21 00000014 416E556E546100             text db 'AnUnTa', 0
    22                                     len equ $ - text 
    23 0000001B 00<rept>                   text_final times len db 0    
    24                                     
    25                                  segment code use32 class=code
    26                                      start:
    27                                          ;opening file practice4.txt 
    28                                          ;eax = fopen(nume_fisier, mod_acces)
    29 00000000 68[0E000000]                    push dword mod_acces
    30 00000005 68[00000000]                    push dword nume_fisier
    31 0000000A FF15[00000000]                  call [fopen] 
    32 00000010 83C408                          add esp, 4*2 
    33                                          
    34 00000013 A3[10000000]                    mov [descriptor], eax 
    35                                          
    36 00000018 83F800                          cmp eax, 0
    37 0000001B 7448                            je final 
    38                                          
    39 0000001D B907000000                      mov ecx, len 
    40 00000022 BE[14000000]                    mov esi, text
    41 00000027 BF[1B000000]                    mov edi, text_final 
    42                                      repeta: 
    43 0000002C AC                              lodsb
    44 0000002D 3C61                            cmp al, 'a' ;comparam codurile ascii ale lui al cu 'a', iar daca
    45                                                      ;este mai mare (adica e litera mica) atunci sare la eticheta 
    46                                                      ;nope, unde continutul lui al va fi pus in text_final si se va face loop
    47 0000002F 770E                            ja nope   
    48 00000031 3C41                            cmp al, 'A' ;comparam codurile ascii ale lui al cu 'A', iar daca este mai mare (adica e litera mare)
    49                                                      ;atunci sare la check_again_Z, unde se va compara cu 'Z', iar daca este mai mic (adica e tot litera mare)
    50                                                      ;atunci sare la check_again, unde se va face schimbarea uppercase to lowercase 
    51 00000033 7700                            ja check_again_Z
    52                                      check_again_Z:
    53 00000035 3C5A                            cmp al, 'Z'
    54 00000037 7204                            jb check_again
    55 00000039 3C7A                            cmp al, 'z'
    56 0000003B 7202                            jb nope 
    57                                      check_again:
    58 0000003D 3420                            xor al, 32
    59                                      nope:
    60 0000003F AA                              stosb
    61 00000040 E2EA                            loop repeta
    62                                          
    63                                          ;scriem in practice4.txt textul rezultat 
    64                                          ;eax = fprintf(descriptor, text) 
    65 00000042 68[1B000000]                    push dword text_final  
    66 00000047 FF35[10000000]                  push dword [descriptor] 
    67 0000004D FF15[00000000]                  call [fprintf] 
    68 00000053 83C408                          add esp, 4*2 
    69                                          
    70                                          ;closing file practice4.txt 
    71                                          ;eax = fclose(descriptor)
    72 00000056 FF35[10000000]                  push dword [descriptor]
    73 0000005C FF15[00000000]                  call [fclose]
    74 00000062 83C404                          add esp, 4
    75                                          
    76                                      final:
    77 00000065 6A00                            push    dword 0      
    78 00000067 FF15[00000000]                  call    [exit]       
